{"ast":null,"code":"import _slicedToArray from \"/Users/valeriecardon/Red-Tetris/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/valeriecardon/Red-Tetris/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/valeriecardon/Red-Tetris/client/src/components/Game.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer, useEffect, useRef } from 'react';\nimport pieces from './pieces.json';\nimport tab from './pieces.1.json';\nimport { tetriReducer, initialTetriState } from '../reducers/tetriReducer';\nconst blockSize = 40;\nconst blockStyle = {\n  backgroundColor: 'lightgrey',\n  width: \"\".concat(blockSize, \"px\"),\n  height: \"\".concat(blockSize, \"px\"),\n  border: '1px solid grey'\n};\n\nconst Block = ({\n  empty,\n  color,\n  transparent\n}) => {\n  return React.createElement(\"div\", {\n    style: !!empty ? _objectSpread({}, blockStyle) : transparent ? _objectSpread({}, blockStyle, {\n      border: '1px solid transparent',\n      backgroundColor: 'transparent'\n    }) : _objectSpread({}, blockStyle, {\n      border: '1px solid black',\n      backgroundColor: \"\".concat(color)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n};\n\nexport const Game = () => {\n  // const [curTetri, moveTetri] = useReducer(tetriReducer, initialTetriState)\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        increment = _useState2[1];\n\n  const initialTetriState = () => {\n    const name = pieces.pieces[counter];\n    return {\n      h: tab[name].position[0].height,\n      type: tab[name].type,\n      name: name,\n      x: 0,\n      y: 0,\n      leftSpace: tab[name].position[0].leftSpace,\n      rightSpace: tab[name].position[0].rightSpace,\n      downSpace: tab[name].position[0].downSpace,\n      rot: 0,\n      form: tab[name].position[0].form,\n      color: tab[name].color\n    };\n  };\n\n  const _useState3 = useState(initialTetriState()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        curTetri = _useState4[0],\n        moveTetri = _useState4[1];\n\n  const checkPlace = () => {\n    if (board.tab[curTetri.y + 1][curTetri.x] === 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    console.log('counter + 1!');\n    refInterval.current = setInterval(() => {\n      moveTetri(tetri => {\n        return _objectSpread({}, tetri, {\n          y: tetri.y + 1\n        });\n      });\n    }, 500); // moveTetri({type: 'SET_TETRI', payload: curTetri.name})\n    // refInterval.current = setInterval(() => {\n    // \t\tmoveTetri({type: 'DOWN'})\n    // \t}, 200)\n    // document.addEventListener(\"keydown\", event => {\n    // \tif (event.keyCode === 37) {\n    // \t\tmoveTetri({type: 'LEFT'})\n    // \t}\n    // \tif (event.keyCode === 39) {\n    // \t\tmoveTetri({type: 'RIGHT'})\n    // \t}\n    // \tif (event.keyCode === 38) {\n    // \t\tmoveTetri({type: 'ROTATION'})\n    // \t}\n    // })\n\n    return () => {\n      clearInterval(refInterval.current);\n    };\n  }, [counter]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", event => {\n      if (event.keyCode === 39) {\n        moveTetri(tetri => {\n          //DROITE\n          return _objectSpread({}, tetri, {\n            x: tetri.x + 1\n          });\n        });\n      }\n\n      if (event.keyCode === 37) {\n        //GAUCHE\n        moveTetri(tetri => {\n          return _objectSpread({}, tetri, {\n            x: tetri.x - 1\n          });\n        });\n      }\n\n      if (event.keyCode === 38) {\n        //HAUT (rotation)\n        moveTetri(tetri => {\n          const rot = tetri.rot > 2 ? 0 : tetri.rot + 1;\n          return _objectSpread({}, tetri, {\n            form: tab[tetri.name].position[rot].form,\n            rot: rot,\n            h: tab[tetri.name].position[rot].height,\n            leftSpace: tab[tetri.name].position[rot].leftSpace,\n            rightSpace: tab[tetri.name].position[rot].rightSpace,\n            downSpace: tab[tetri.name].position[rot].downSpace\n          });\n        });\n      }\n\n      if (event.keyCode === 40) {\n        //BAS\n        clearInterval(refInterval.current);\n        refInterval.current = setInterval(() => {\n          moveTetri(tetri => {\n            return _objectSpread({}, tetri, {\n              y: tetri.y + 1\n            });\n          });\n        }, 50);\n      }\n    });\n  }, []);\n  const colorTab = ['red', 'blue', 'yellow', 'purple', 'white', 'cyan', 'green'];\n\n  const checkColision = () => {\n    curTetri.form.map((line, y) => {\n      line.map((col, x) => {\n        if (board.tab[curTetri.y + curTetri.h + y][curTetri.x + x] === 1) {\n          return true;\n        }\n      });\n    });\n    return false;\n  };\n\n  useEffect(() => {\n    if (curTetri.y + curTetri.h > 19 || checkColision()) {\n      clearInterval(refInterval.current);\n      updateBoard(old => {\n        curTetri.form.map((line, y) => {\n          line.map((col, x) => {\n            if (curTetri.form[y][x] > 0) {\n              old.tab[curTetri.y + y][curTetri.x + x] = curTetri.form[y][x];\n            }\n          });\n        });\n        return old;\n      });\n      board.tetriList.length >= 1 ? board.tetriList.concat(curTetri) : board.tetriList.push(curTetri);\n      increment(i => i + 1);\n      moveTetri(initialTetriState());\n    }\n  });\n\n  const _useState5 = useState({\n    tab: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],\n    tetriList: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        board = _useState6[0],\n        updateBoard = _useState6[1];\n\n  const refInterval = useRef(false);\n  const tetri = curTetri.form;\n  return React.createElement(\"div\", {\n    className: \"flex center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'absolute',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, board.tab.map((line, index) => {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, line.map((col, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, col > 0 ? React.createElement(Block, {\n        color: colorTab[col - 1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }) : React.createElement(Block, {\n        empty: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }));\n    }));\n  }), React.createElement(\"div\", {\n    className: \"absolute\",\n    style: {\n      top: \"\".concat(blockSize * curTetri.y + curTetri.y * 2, \"px\"),\n      left: \"\".concat(blockSize * curTetri.x + curTetri.x * 2, \"px\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, tetri.map((line, index) => {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, line.map((col, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, col > 0 ? React.createElement(Block, {\n        color: curTetri.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }) : React.createElement(Block, {\n        transparent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }));\n    }));\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"x: \".concat(curTetri.x, \" y: \").concat(curTetri.y, \" height: \").concat(curTetri.h))));\n};","map":{"version":3,"sources":["/Users/valeriecardon/Red-Tetris/client/src/components/Game.js"],"names":["React","useState","useReducer","useEffect","useRef","pieces","tab","tetriReducer","initialTetriState","blockSize","blockStyle","backgroundColor","width","height","border","Block","empty","color","transparent","Game","counter","increment","name","h","position","type","x","y","leftSpace","rightSpace","downSpace","rot","form","curTetri","moveTetri","checkPlace","board","console","log","refInterval","current","setInterval","tetri","clearInterval","document","addEventListener","event","keyCode","colorTab","checkColision","map","line","col","updateBoard","old","tetriList","length","concat","push","i","index","display","top","left"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect, useRef } from 'react'\nimport pieces from './pieces.json'\nimport tab from './pieces.1.json'\nimport {tetriReducer, initialTetriState} from '../reducers/tetriReducer'\n\nconst blockSize = 40\n\nconst blockStyle = ({\n\tbackgroundColor: 'lightgrey',\n\twidth: `${blockSize}px`,\n\theight: `${blockSize}px`,\n\tborder: '1px solid grey'\n})\n\nconst Block = ({empty, color, transparent})=>{\n\treturn (\n\t\t<div\n\t\t\tstyle={\n\t\t\t\t!!empty\n\t\t\t\t\t? {...blockStyle}\n\t\t\t\t\t: transparent\n\t\t\t\t\t\t? {...blockStyle, border: '1px solid transparent', backgroundColor: 'transparent'}\n\t\t\t\t\t\t: {...blockStyle, border: '1px solid black', backgroundColor: `${color}`}}\n\t\t/>\n\t)\n}\n\n\nexport const Game = () => {\n\n\t// const [curTetri, moveTetri] = useReducer(tetriReducer, initialTetriState)\n\n\n\tconst [counter, increment] = useState(0)\n\n\n\tconst initialTetriState = () => {\n\t\tconst name = pieces.pieces[counter]\n\t\treturn({\n\t\t\th: tab[name].position[0].height,\n\t\t\ttype: tab[name].type,\n\t\t\tname: name,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tleftSpace: tab[name].position[0].leftSpace,\n\t\t\trightSpace: tab[name].position[0].rightSpace,\n\t\t\tdownSpace: tab[name].position[0].downSpace,\n\t\t\trot: 0,\n\t\t\tform: tab[name].position[0].form,\n\t\t\tcolor: tab[name].color\n\t})}\n\n\tconst [curTetri, moveTetri] = useState(initialTetriState())\n\n\tconst checkPlace = () => {\n\t\tif (board.tab[curTetri.y + 1][curTetri.x] === 0){\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tuseEffect(() => {\n\n\t\tconsole.log('counter + 1!')\n\t\trefInterval.current = setInterval(() => {\n\t\t\tmoveTetri((tetri)=>{\n\t\t\t\treturn {...tetri, y: tetri.y + 1}\n\t\t\t})\n\t\t}, 500)\n\t\t\n\t\t// moveTetri({type: 'SET_TETRI', payload: curTetri.name})\n\n\t\t// refInterval.current = setInterval(() => {\n\t\t// \t\tmoveTetri({type: 'DOWN'})\n\t\t// \t}, 200)\n\n\t\t// document.addEventListener(\"keydown\", event => {\n\t\t// \tif (event.keyCode === 37) {\n\t\t// \t\tmoveTetri({type: 'LEFT'})\n\t\t// \t}\n\t\t// \tif (event.keyCode === 39) {\n\t\t// \t\tmoveTetri({type: 'RIGHT'})\n\t\t// \t}\n\t\t// \tif (event.keyCode === 38) {\n\t\t// \t\tmoveTetri({type: 'ROTATION'})\n\t\t// \t}\n\t\t// })\n\n\t\t\treturn () => {\n\t\t\t\tclearInterval(refInterval.current)\n\t\t\t}\n\t\t}, [counter])\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", event => {\n\t\tif (event.keyCode === 39) {\n\t\t\t\tmoveTetri((tetri)=>{//DROITE\n\t\t\t\t\treturn {...tetri, x: tetri.x + 1}\n\t\t\t\t})\n\t\t}\n\n\t\tif (event.keyCode === 37) {//GAUCHE\n\t\t\tmoveTetri((tetri)=>{\n\t\t\t\treturn {...tetri, x: tetri.x - 1}\n\t\t\t})\n\t\t}\n\n\t\tif (event.keyCode === 38) {//HAUT (rotation)\n\t\t\tmoveTetri((tetri)=>{\n\t\t\t\tconst rot = tetri.rot > 2 ? 0 : tetri.rot + 1\n\t\t\t\treturn {\n\t\t\t\t\t...tetri,\n\t\t\t\t\tform: tab[tetri.name].position[rot].form,\n\t\t\t\t\trot: rot,\n\t\t\t\t\th: tab[tetri.name].position[rot].height,\n\t\t\t\t\tleftSpace: tab[tetri.name].position[rot].leftSpace,\n\t\t\t\t\trightSpace: tab[tetri.name].position[rot].rightSpace,\n\t\t\t\t\tdownSpace: tab[tetri.name].position[rot].downSpace,\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (event.keyCode === 40) {//BAS\n\t\t\t\tclearInterval(refInterval.current)\n\t\t\t\trefInterval.current = setInterval(() => {\n\t\t\t\t\tmoveTetri((tetri)=>{\n\t\t\t\t\t\treturn {...tetri, y: tetri.y + 1}\n\t\t\t\t\t})\n\t\t\t\t}, 50)\n\t\t}\n\t})}, [])\n\n\tconst colorTab = ([\n\t\t'red',\n\t\t'blue',\n\t\t'yellow',\n\t\t'purple',\n\t\t'white',\n\t\t'cyan',\n\t\t'green'\n\t])\n\n\tconst checkColision = ()=>{\n\t\tcurTetri.form.map((line, y)=>{\n\t\t\tline.map((col, x)=>{\n\t\t\t\tif (board.tab[curTetri.y + curTetri.h + y][curTetri.x + x] === 1){\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\treturn false\n\t}\n\n\n\tuseEffect(() => {\n\t\tif (curTetri.y + curTetri.h > 19 || checkColision()){\n\t\t\tclearInterval(refInterval.current)\n\t\t\tupdateBoard((old)=>{\n\t\t\t\tcurTetri.form.map((line, y)=>{\n\t\t\t\t\tline.map((col, x)=>{\n\t\t\t\t\t\tif (curTetri.form[y][x] > 0){\n\t\t\t\t\t\t\told.tab[curTetri.y + y][curTetri.x + x] = curTetri.form[y][x]\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\treturn old\n\t\t\t})\n\t\t\tboard.tetriList.length >= 1 ? board.tetriList.concat(curTetri) : board.tetriList.push(curTetri)\n\t\t\tincrement((i)=>i+1)\n\t\t\tmoveTetri(initialTetriState())\n\t\t}\n\t})\n\n\n\tconst [board, updateBoard] = useState({\n\t\ttab: [\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0]\n\t\t],\n\t\ttetriList: []\n\t})\n\n\tconst refInterval = useRef(false)\n\tconst tetri = curTetri.form\n\treturn (\n\t\t<div className='flex center'>\n\t\t\t<div className={'absolute'}>\n\n\t\t\t\t{\n\t\t\t\t\tboard.tab.map((line, index)=>{\n\t\t\t\t\t\treturn <div style={{display: 'flex'}} key={index}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tline.map((col, index) => {\n\t\t\t\t\t\t\t\t\treturn <div key={index}>\n\t\t\t\t\t\t\t\t\t\t{col > 0\n\t\t\t\t\t\t\t\t\t\t\t? <Block color={colorTab[col - 1]}/>\n\t\t\t\t\t\t\t\t\t\t\t: <Block empty/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`absolute`}\n\t\t\t\t\t\tstyle={{top: `${blockSize * curTetri.y + curTetri.y * 2}px`, left: `${blockSize * curTetri.x + curTetri.x * 2}px`}}>\n\t\t\t\t\t{\n\t\t\t\t\t\ttetri.map((line, index)=>{\n\t\t\t\t\t\treturn <div style={{display: 'flex'}} key={index}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tline.map((col, index) => {\n\t\t\t\t\t\t\t\t\treturn <div key={index}>\n\t\t\t\t\t\t\t\t\t\t{col > 0\n\t\t\t\t\t\t\t\t\t\t\t? <Block color={curTetri.color}/>\n\t\t\t\t\t\t\t\t\t\t\t: <Block transparent/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\t<p>{`x: ${curTetri.x} y: ${curTetri.y} height: ${curTetri.h}`}</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}