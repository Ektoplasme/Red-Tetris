{"ast":null,"code":"import _slicedToArray from \"/Users/valeriecardon/Red-Tetris/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/valeriecardon/Red-Tetris/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/valeriecardon/Red-Tetris/client/src/components/Game.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport pieces from './pieces.json';\nimport tab from './pieces.1.json';\nconst blockSize = 40;\nconst blockStyle = {\n  backgroundColor: 'pink',\n  width: \"\".concat(blockSize, \"px\"),\n  height: \"\".concat(blockSize, \"px\"),\n  border: '1px solid pink'\n};\n\nconst Block = ({\n  empty,\n  color,\n  transparent\n}) => {\n  return React.createElement(\"div\", {\n    style: !!empty ? _objectSpread({}, blockStyle) : transparent ? _objectSpread({}, blockStyle, {\n      border: '1px solid transparent',\n      backgroundColor: 'transparent'\n    }) : _objectSpread({}, blockStyle, {\n      border: '1px solid white',\n      backgroundColor: \"\".concat(color)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n};\n\nexport const Game = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        increment = _useState2[1];\n\n  const canFit = tetri => {\n    const map = board.tab;\n    tetri.form.map((line, y) => {\n      line.map((col, x) => {\n        console.log('yolo');\n\n        if (col > 0 && map[tetri.y + y][tetri.x + x] > 0) {\n          console.log(\"nope\");\n          return false;\n        }\n      });\n    });\n    console.log('canfit');\n    return true;\n  };\n\n  const initialTetriState = () => {\n    const name = pieces.pieces[counter];\n    return {\n      maxWidth: tab[name].position[0].maxWidth,\n      maxHeight: tab[name].position[0].maxHeight,\n      h: tab[name].position[0].height,\n      type: tab[name].type,\n      name: name,\n      width: tab[name].position[0].width,\n      x: 3,\n      y: 0,\n      leftSpace: tab[name].position[0].leftSpace,\n      rightSpace: tab[name].position[0].rightSpace,\n      downSpace: tab[name].position[0].downSpace,\n      rot: 0,\n      form: tab[name].position[0].form,\n      color: tab[name].color\n    };\n  };\n\n  const _useState3 = useState(initialTetriState()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        curTetri = _useState4[0],\n        moveTetri = _useState4[1];\n\n  const keydownFunc = event => {\n    if (event.keyCode === 39) {\n      moveTetri(tetri => {\n        //DROITE\n        // if (tetri.x + tetri.maxWidth < 10 &&\n        // \t (board.tab[tetri.y][tetri.x + tetri.width[0]] === 0 ||\n        // \t\ttetri.width[0] === 0) &&\n        // \t (board.tab[tetri.y + 1][tetri.x + tetri.width[1]] === 0 ||\n        // \t\ttetri.width[1] === 0) &&\n        // \t (board.tab[tetri.y + 2][tetri.x + tetri.width[2]] === 0 ||\n        // \t\ttetri.width[2] === 0) &&\n        // \t (board.tab[tetri.y + 3][tetri.x + tetri.width[3]] === 0 ||\n        // \t\ttetri.width[3] === 0)) return {...tetri, x: tetri.x + 1}\n        if (canFit(_objectSpread({}, tetri, {\n          x: tetri.x + 1\n        }))) return _objectSpread({}, tetri, {\n          x: tetri.x + 1\n        });else return tetri;\n      });\n    }\n\n    if (event.keyCode === 37) {\n      //GAUCHE\n      moveTetri(tetri => {\n        if (tetri.x + tetri.leftSpace > 0 && (board.tab[tetri.y][tetri.x + (4 - tetri.width[0])] === 0 || tetri.width[0] === 0) && (board.tab[tetri.y + 1][tetri.x + (4 - tetri.width[1])] === 0 || tetri.width[1] === 0) && (board.tab[tetri.y + 2][tetri.x + (4 - tetri.width[2])] === 0 || tetri.width[2] === 0) && (board.tab[tetri.y + 3][tetri.x + (4 - tetri.width[3])] === 0 || tetri.width[3] === 0)) return _objectSpread({}, tetri, {\n          x: tetri.x - 1\n        });else return tetri;\n      });\n    }\n\n    if (event.keyCode === 38) {\n      //HAUT (rotation)\n      moveTetri(tetri => {\n        const rot = tetri.rot > 2 ? 0 : tetri.rot + 1;\n\n        const tetriRot = _objectSpread({}, tetri, {\n          form: tab[tetri.name].position[rot].form,\n          rot: rot,\n          h: tab[tetri.name].position[rot].height,\n          leftSpace: tab[tetri.name].position[rot].leftSpace,\n          rightSpace: tab[tetri.name].position[rot].rightSpace,\n          downSpace: tab[tetri.name].position[rot].downSpace,\n          maxHeight: tab[tetri.name].position[rot].maxHeight,\n          maxWidth: tab[tetri.name].position[rot].maxWidth,\n          width: tab[tetri.name].position[rot].width,\n          height: tab[tetri.name].position[rot].height\n        });\n\n        if (canFit(tetriRot)) {\n          //si ya la place de faire une rotation\n          return tetriRot;\n        } else return tetri;\n      });\n    }\n\n    if (event.keyCode === 40) {\n      //BAS\n      clearInterval(refInterval.current);\n      refInterval.current = setInterval(() => {\n        moveTetri(tetri => {\n          return _objectSpread({}, tetri, {\n            y: tetri.y + 1\n          });\n        });\n      }, 50);\n    }\n  };\n\n  useEffect(() => {\n    refInterval.current = setInterval(() => {\n      moveTetri(tetri => {\n        return _objectSpread({}, tetri, {\n          y: tetri.y + 1\n        });\n      });\n    }, 500);\n    return () => {\n      clearInterval(refInterval.current);\n    };\n  }, [counter]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keydownFunc);\n  }, []);\n  const colorTab = ['red', 'blue', 'yellow', 'purple', 'salmon', 'cyan', 'green'];\n\n  const checkColision = () => {\n    if (!!board.tab[curTetri.y + curTetri.maxHeight] && (board.tab[curTetri.y + curTetri.h[0]][curTetri.x] > 0 && curTetri.leftSpace === 0 || board.tab[curTetri.y + curTetri.h[1]][curTetri.x + 1] > 0 && curTetri.h[1] > 0 || board.tab[curTetri.y + curTetri.h[2]][curTetri.x + 2] > 0 && curTetri.h[2] > 0 || board.tab[curTetri.y + curTetri.h[3]][curTetri.x + 3] > 0 && curTetri.rightSpace === 0)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const removeLine = (num, tab) => {\n    let newTab = tab;\n    num.map(n => {\n      newTab.splice(n, 1);\n      newTab.splice(0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n      return num;\n    });\n    updateBoard({\n      tetriList: board.tetriList,\n      tab: newTab\n    });\n  };\n\n  const checkLine = () => {\n    let tab = board.tab;\n    let lines = [];\n    tab.map((line, y) => {\n      if (line.every(num => {\n        return num > 0;\n      })) {\n        lines.push(y);\n      }\n\n      return tab;\n    });\n    if (lines.length) removeLine(lines, tab);\n  };\n\n  useEffect(() => {\n    checkLine();\n\n    if (curTetri.y + curTetri.maxHeight > 19 || checkColision()) {\n      clearInterval(refInterval.current);\n      updateBoard(old => {\n        curTetri.form.map((line, y) => {\n          line.map((col, x) => {\n            if (curTetri.form[y][x] > 0) {\n              old.tab[curTetri.y + y][curTetri.x + x] = curTetri.form[y][x];\n            }\n          });\n        });\n        return old;\n      });\n      board.tetriList.length >= 1 ? board.tetriList.concat(curTetri) : board.tetriList.push(curTetri);\n\n      if (!board.tab[0][curTetri.x + curTetri.leftSpace] > 0 && !board.tab[0][curTetri.x + curTetri.leftSpace + 1] > 0 && !board.tab[0][curTetri.x + curTetri.leftSpace + 2] > 0) {\n        increment(i => i + 1);\n        moveTetri(initialTetriState());\n      } else {\n        document.removeEventListener('keydown', keydownFunc);\n      }\n    }\n  });\n\n  const _useState5 = useState({\n    tab: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],\n    tetriList: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        board = _useState6[0],\n        updateBoard = _useState6[1];\n\n  const refInterval = useRef(false);\n  const tetri = curTetri.form;\n  return React.createElement(\"div\", {\n    className: \"flex center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: 'absolute',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, board.tab.map((line, index) => {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, line.map((col, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, col > 0 ? React.createElement(Block, {\n        color: colorTab[col - 1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }) : React.createElement(Block, {\n        empty: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }));\n    }));\n  }), React.createElement(\"div\", {\n    className: \"absolute\",\n    style: {\n      top: \"\".concat(blockSize * curTetri.y + curTetri.y * 2, \"px\"),\n      left: \"\".concat(blockSize * curTetri.x + curTetri.x * 2, \"px\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, tetri.map((line, index) => {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, line.map((col, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, col > 0 ? React.createElement(Block, {\n        color: curTetri.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }) : React.createElement(Block, {\n        transparent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }));\n    }));\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"x: \".concat(curTetri.x, \" y: \").concat(curTetri.y, \" height: \").concat(curTetri.h))));\n};","map":{"version":3,"sources":["/Users/valeriecardon/Red-Tetris/client/src/components/Game.js"],"names":["React","useState","useEffect","useRef","pieces","tab","blockSize","blockStyle","backgroundColor","width","height","border","Block","empty","color","transparent","Game","counter","increment","canFit","tetri","map","board","form","line","y","col","x","console","log","initialTetriState","name","maxWidth","position","maxHeight","h","type","leftSpace","rightSpace","downSpace","rot","curTetri","moveTetri","keydownFunc","event","keyCode","tetriRot","clearInterval","refInterval","current","setInterval","document","addEventListener","colorTab","checkColision","removeLine","num","newTab","n","splice","updateBoard","tetriList","checkLine","lines","every","push","length","old","concat","i","removeEventListener","index","display","top","left"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport pieces from './pieces.json'\nimport tab from './pieces.1.json'\n\nconst blockSize = 40\n\nconst blockStyle = ({\n\tbackgroundColor: 'pink',\n\twidth: `${blockSize}px`,\n\theight: `${blockSize}px`,\n\tborder: '1px solid pink'\n})\n\nconst Block = ({empty, color, transparent})=>{\n\treturn (\n\t\t<div\n\t\t\tstyle={!!empty\n\t\t\t\t? {...blockStyle}\n\t\t\t\t: transparent\n\t\t\t\t\t? {...blockStyle, border: '1px solid transparent', backgroundColor: 'transparent'}\n\t\t\t\t\t: {...blockStyle, border: '1px solid white', backgroundColor: `${color}`}\n\t\t\t}\n\t\t/>\n\t)\n}\n\n\nexport const Game = () => {\n\tconst [counter, increment] = useState(0)\n\n\tconst canFit = (tetri) => {\n\t\tconst map = board.tab\n\n\t\ttetri.form.map((line, y)=>{\n\t\t\tline.map((col, x)=>{\n\t\t\t\tconsole.log('yolo')\n\t\t\t\tif (col > 0 && map[tetri.y + y][tetri.x + x] > 0){\n\t\t\t\t\tconsole.log(\"nope\")\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\tconsole.log('canfit')\n\t\treturn true\n\t}\n\n\tconst initialTetriState = () => {\n\t\tconst name = pieces.pieces[counter]\n\t\treturn({\n\t\t\tmaxWidth: tab[name].position[0].maxWidth,\n\t\t\tmaxHeight: tab[name].position[0].maxHeight,\n\t\t\th: tab[name].position[0].height,\n\t\t\ttype: tab[name].type,\n\t\t\tname: name,\n\t\t\twidth: tab[name].position[0].width,\n\t\t\tx: 3,\n\t\t\ty: 0,\n\t\t\tleftSpace: tab[name].position[0].leftSpace,\n\t\t\trightSpace: tab[name].position[0].rightSpace,\n\t\t\tdownSpace: tab[name].position[0].downSpace,\n\t\t\trot: 0,\n\t\t\tform: tab[name].position[0].form,\n\t\t\tcolor: tab[name].color\n\t})}\n\n\tconst [curTetri, moveTetri] = useState(initialTetriState())\n\n\tconst keydownFunc = event => {\n\t\tif (event.keyCode === 39) {\n\t\t\t\tmoveTetri((tetri)=>{//DROITE\n\t\t\t\t\t// if (tetri.x + tetri.maxWidth < 10 &&\n\t\t\t\t\t// \t (board.tab[tetri.y][tetri.x + tetri.width[0]] === 0 ||\n\t\t\t\t\t// \t\ttetri.width[0] === 0) &&\n\t\t\t\t\t// \t (board.tab[tetri.y + 1][tetri.x + tetri.width[1]] === 0 ||\n\t\t\t\t\t// \t\ttetri.width[1] === 0) &&\n\t\t\t\t\t// \t (board.tab[tetri.y + 2][tetri.x + tetri.width[2]] === 0 ||\n\t\t\t\t\t// \t\ttetri.width[2] === 0) &&\n\t\t\t\t\t// \t (board.tab[tetri.y + 3][tetri.x + tetri.width[3]] === 0 ||\n\t\t\t\t\t// \t\ttetri.width[3] === 0)) return {...tetri, x: tetri.x + 1}\n\t\t\t\t\tif (canFit({...tetri, x: tetri.x + 1})) return {...tetri, x: tetri.x + 1}\n\t\t\t\t\telse return tetri\n\t\t\t\t})\n\t\t}\n\t\tif (event.keyCode === 37) {//GAUCHE\n\t\t\tmoveTetri((tetri)=>{\n\t\t\t\tif (tetri.x + tetri.leftSpace > 0 &&\n\t\t\t\t\t(board.tab[tetri.y][tetri.x + (4 - tetri.width[0])] === 0 ||\n\t\t\t\t\t tetri.width[0] === 0) &&\n\t\t\t\t\t(board.tab[tetri.y + 1][tetri.x + (4 - tetri.width[1])] === 0 ||\n\t\t\t\t\t tetri.width[1] === 0) &&\n\t\t\t\t\t(board.tab[tetri.y + 2][tetri.x + (4 - tetri.width[2])] === 0 ||\n\t\t\t\t\t tetri.width[2] === 0) &&\n\t\t\t\t\t(board.tab[tetri.y + 3][tetri.x + (4 - tetri.width[3])] === 0 ||\n\t\t\t\t\t tetri.width[3] === 0)) return {...tetri, x: tetri.x - 1}\n\t\t\t\telse return tetri\n\t\t\t})\n\t\t}\n\t\tif (event.keyCode === 38) {//HAUT (rotation)\n\t\t\tmoveTetri((tetri)=>{\n\t\t\t\tconst rot = tetri.rot > 2 ? 0 : tetri.rot + 1\n\t\t\t\tconst tetriRot = {\n\t\t\t\t\t...tetri,\n\t\t\t\t\tform: tab[tetri.name].position[rot].form,\n\t\t\t\t\trot: rot,\n\t\t\t\t\th: tab[tetri.name].position[rot].height,\n\t\t\t\t\tleftSpace: tab[tetri.name].position[rot].leftSpace,\n\t\t\t\t\trightSpace: tab[tetri.name].position[rot].rightSpace,\n\t\t\t\t\tdownSpace: tab[tetri.name].position[rot].downSpace,\n\t\t\t\t\tmaxHeight: tab[tetri.name].position[rot].maxHeight,\n\t\t\t\t\tmaxWidth: tab[tetri.name].position[rot].maxWidth,\n\t\t\t\t\twidth: tab[tetri.name].position[rot].width,\n\t\t\t\t\theight: tab[tetri.name].position[rot].height,\n\t\t\t\t}\n\t\t\t\tif (canFit(tetriRot)){//si ya la place de faire une rotation\n\t\t\t\t\treturn tetriRot\n\t\t\t\t} else return tetri\n\t\t\t})\n\t\t}\n\t\tif (event.keyCode === 40) {//BAS\n\t\t\t\tclearInterval(refInterval.current)\n\t\t\t\trefInterval.current = setInterval(() => {\n\t\t\t\t\tmoveTetri((tetri)=>{\n\t\t\t\t\t\treturn {...tetri, y: tetri.y + 1}\n\t\t\t\t\t})\n\t\t\t\t}, 50)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\trefInterval.current = setInterval(() => {\n\t\t\tmoveTetri((tetri)=>{\n\t\t\t\treturn {...tetri, y: tetri.y + 1}\n\t\t\t})\n\t\t}, 500)\n\n\t\t\treturn () => {\n\t\t\t\tclearInterval(refInterval.current)\n\t\t\t}\n\t\t}, [counter])\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"keydown\", keydownFunc)\n\t}, [])\n\n\tconst colorTab = ([\n\t\t'red',\n\t\t'blue',\n\t\t'yellow',\n\t\t'purple',\n\t\t'salmon',\n\t\t'cyan',\n\t\t'green'\n\t])\n\n\tconst checkColision = ()=>{\n\t\tif (!!board.tab[curTetri.y + curTetri.maxHeight] &&\n\t\t\t ((board.tab[curTetri.y + curTetri.h[0]][curTetri.x] > 0 && curTetri.leftSpace === 0)||\n\t\t\t (board.tab[curTetri.y + curTetri.h[1]][curTetri.x + 1] > 0 && curTetri.h[1] > 0) ||\n\t\t\t (board.tab[curTetri.y + curTetri.h[2]][curTetri.x + 2] > 0 && curTetri.h[2] > 0)||\n\t\t\t (board.tab[curTetri.y + curTetri.h[3]][curTetri.x + 3] > 0 && curTetri.rightSpace === 0))){\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tconst removeLine = (num, tab) => {\n\t\tlet newTab = tab\n\t\tnum.map((n)=>{\n\t\t\tnewTab.splice(n, 1) \n\t\t\tnewTab.splice(0, 0, [0,0,0,0,0,0,0,0,0,0])\n\t\t\treturn num\n\t\t})\n\t\tupdateBoard({tetriList: board.tetriList, tab:newTab})\n\t}\n\n\tconst checkLine = () => {\n\t\tlet tab = board.tab\n\t\tlet lines = []\n\t\ttab.map((line, y)=>{\n\t\t\tif (line.every((num)=>{return num > 0})){\n\t\t\t\tlines.push(y)\n\t\t\t}\n\t\t\treturn tab\n\t\t})\n\t\tif (lines.length) removeLine(lines, tab)\n\t}\n\n\tuseEffect(() => {\n\t\t\tcheckLine()\n\n\t\t\tif (curTetri.y + curTetri.maxHeight > 19 || checkColision()){\n\t\t\t\tclearInterval(refInterval.current)\n\t\t\t\tupdateBoard((old)=>{\n\t\t\t\t\tcurTetri.form.map((line, y)=>{\n\t\t\t\t\t\tline.map((col, x)=>{\n\t\t\t\t\t\t\tif (curTetri.form[y][x] > 0){\n\t\t\t\t\t\t\t\told.tab[curTetri.y + y][curTetri.x + x] = curTetri.form[y][x]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\treturn old\n\t\t\t\t})\n\n\t\t\tboard.tetriList.length >= 1\n\t\t\t\t? board.tetriList.concat(curTetri)\n\t\t\t\t: board.tetriList.push(curTetri)\n\t\t\t\n\t\t\tif (!board.tab[0][curTetri.x + curTetri.leftSpace] > 0 &&\n\t\t\t!board.tab[0][curTetri.x + curTetri.leftSpace + 1] > 0 &&\n\t\t\t!board.tab[0][curTetri.x + curTetri.leftSpace + 2] > 0){\n\t\t\t\tincrement((i)=>i+1)\n\t\t\t\tmoveTetri(initialTetriState())\n\t\t\t} else {\n\t\t\t\tdocument.removeEventListener('keydown', keydownFunc)\n\t\t\t}\n\t\t}\n\t})\n\n\n\tconst [board, updateBoard] = useState({\n\t\ttab: [\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0],\n\t\t\t[0,0,0,0,0,0,0,0,0,0]\n\t\t],\n\t\ttetriList: []\n\t})\n\n\tconst refInterval = useRef(false)\n\tconst tetri = curTetri.form\n\treturn (\n\t\t<div className='flex center'>\n\t\t\t<div className={'absolute'}>\n\n\t\t\t\t{\n\t\t\t\t\tboard.tab.map((line, index)=>{\n\t\t\t\t\t\treturn <div style={{display: 'flex'}} key={index}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tline.map((col, index) => {\n\t\t\t\t\t\t\t\t\treturn <div key={index}>\n\t\t\t\t\t\t\t\t\t\t{col > 0\n\t\t\t\t\t\t\t\t\t\t\t? <Block color={colorTab[col - 1]}/>\n\t\t\t\t\t\t\t\t\t\t\t: <Block empty/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`absolute`}\n\t\t\t\t\t\tstyle={{top: `${blockSize * curTetri.y + curTetri.y * 2}px`, left: `${blockSize * curTetri.x + curTetri.x * 2}px`}}>\n\t\t\t\t\t{\n\t\t\t\t\t\ttetri.map((line, index)=>{\n\t\t\t\t\t\treturn <div style={{display: 'flex'}} key={index}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tline.map((col, index) => {\n\t\t\t\t\t\t\t\t\treturn <div key={index}>\n\t\t\t\t\t\t\t\t\t\t{col > 0\n\t\t\t\t\t\t\t\t\t\t\t? <Block color={curTetri.color}/>\n\t\t\t\t\t\t\t\t\t\t\t: <Block transparent/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\t<p>{`x: ${curTetri.x} y: ${curTetri.y} height: ${curTetri.h}`}</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}