{"ast":null,"code":"import _defineProperty from \"/Users/valeriecardon/Red-Tetris/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport pieces from '../components/pieces.1.json';\nexport const initialTetriState = {\n  listIndex: 0,\n  name: 'O',\n  x: 0,\n  y: 0,\n  leftSpace: 0,\n  rightSpace: 0,\n  downSpace: 0,\n  rot: 0,\n  form: [],\n  color: ''\n};\nexport const tetriReducer = (state = initialTetriState, action) => {\n  switch (action.type) {\n    case 'SET_TETRI':\n      const tetri = action.payload;\n      console.log(\"dans reducer: \", tetri);\n      return {\n        name: tetri,\n        x: 3,\n        y: 0,\n        leftSpace: pieces[tetri].position[0].leftSpace,\n        rightSpace: pieces[tetri].position[0].rightSpace,\n        downSpace: pieces[tetri].position[0].downSpace,\n        rot: 0,\n        form: pieces[tetri].position[0].form,\n        color: pieces[tetri].color,\n        listIndex: state.listIndex + 1\n      };\n\n    case 'DOWN':\n      return _objectSpread({}, state, {\n        y: state.y + 1\n      });\n\n    case 'LEFT':\n      return _objectSpread({}, state, {\n        x: state.x -= 1 // leftSpace: state.leftSpace - 1,\n        // rightSpace: state.rightSpace + 1\n\n      });\n\n    case 'RIGHT':\n      return _objectSpread({}, state, {\n        x: state.x += 1 // leftSpace: state.leftSpace + 1,\n        // rightSpace: state.rightSpace - 1\n\n      });\n\n    case 'ROTATION':\n      return _objectSpread({}, state, {\n        rot: state.rot > 2 ? 0 : state.rot + 1,\n        form: pieces[state.name][state.rot].form // form: pieces[state.name][state.rot > 3 ? 0 : state.rot + 1]\n\n      });\n\n    default:\n      return state;\n  }\n};\nexport const initialBoardState = {\n  tab: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],\n  tetriList: []\n};\nexport const boardReducer = (state = initialBoardState, action) => {\n  switch (action.type) {\n    case 'UPDATE':\n      console.log(list);\n      const list = state.tetriList;\n      const tetri = action.payload.tetri;\n      return _objectSpread({}, state, {\n        tab: action.payload.tab,\n        tetriList: list.length >= 1 ? list.concat(tetri) : list.push(tetri)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/valeriecardon/Red-Tetris/client/src/reducers/tetriReducer.js"],"names":["pieces","initialTetriState","listIndex","name","x","y","leftSpace","rightSpace","downSpace","rot","form","color","tetriReducer","state","action","type","tetri","payload","console","log","position","initialBoardState","tab","tetriList","boardReducer","list","length","concat","push"],"mappings":"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","sourcesContent":["import pieces from '../components/pieces.1.json'\n\nexport const initialTetriState = {\n    listIndex: 0,\n    name: 'O',\n    x: 0,\n    y: 0,\n    leftSpace: 0,\n    rightSpace: 0,\n    downSpace: 0,\n    rot: 0,\n    form: [],\n    color: ''\n}\n\nexport const tetriReducer = (state = initialTetriState, action) => {\n    switch (action.type) {\n        case 'SET_TETRI':\n            const tetri = action.payload\n            console.log(\"dans reducer: \", tetri)\n            return {\n                name: tetri,\n                x: 3,\n                y: 0,\n                leftSpace: pieces[tetri].position[0].leftSpace,\n                rightSpace: pieces[tetri].position[0].rightSpace,\n                downSpace: pieces[tetri].position[0].downSpace,\n                rot: 0,\n                form: pieces[tetri].position[0].form,\n                color: pieces[tetri].color,\n                listIndex: state.listIndex + 1,\n            }\n        case 'DOWN':\n            return {\n                ...state,\n                y: state.y + 1\n            }\n        case 'LEFT':\n            return {\n                ...state,\n                x: state.x -= 1,\n                // leftSpace: state.leftSpace - 1,\n                // rightSpace: state.rightSpace + 1\n            }\n        case 'RIGHT':\n            return {\n                ...state,\n                x: state.x += 1,\n                // leftSpace: state.leftSpace + 1,\n                // rightSpace: state.rightSpace - 1\n            }\n        case 'ROTATION':\n            return {\n                ...state,\n                rot: state.rot > 2 ? 0 : state.rot + 1,\n                form: pieces[state.name][state.rot].form\n                // form: pieces[state.name][state.rot > 3 ? 0 : state.rot + 1]\n            }\n        default:\n            return state\n    }\n}\n\nexport const initialBoardState = {\n    tab: [\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0]\n    ],\n    tetriList: []\n}\n\nexport const boardReducer = (state = initialBoardState, action) => {\n    switch (action.type) {\n        case 'UPDATE':\n            console.log(list)\n            const list = state.tetriList\n            const tetri = action.payload.tetri\n            return {\n                ...state,\n                tab: action.payload.tab,\n                tetriList: list.length >= 1 ? list.concat(tetri) : list.push(tetri)\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}